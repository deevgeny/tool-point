version: "3.8"

services:
  database:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
    networks:
      - my_network

  adminer:
    image: adminer
    restart: always
    depends_on:
      - database
    networks:
      - my_network

  backend:
    # Use prod or dev tags for production or development servers
    image: deevgeny/tool-point-backend:dev
    restart: always
    volumes:
      - media:/app/media/
      - static:/app/static/
    environment:
      DB_ENGINE: $DB_ENGINE
      DB_HOST: $DB_HOST
      DB_NAME: $DB_NAME
      DB_PORT: $DB_PORT
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      DEBUG: $DEBUG
      SECRET_KEY: $SECRET_KEY
      ALLOWED_HOSTS: $ALLOWED_HOSTS
      CSRF_TRUSTED_ORIGINS: $CSRF_TRUSTED_ORIGINS
      CORS_ALLOWED_ORIGINS: $CORS_ALLOWED_ORIGINS
      ADMIN_EMAIL: $ADMIN_EMAIL
      ADMIN_FIRST_NAME: $ADMIN_FIRST_NAME
      ADMIN_LAST_NAME: $ADMIN_LAST_NAME
      ADMIN_PASSWORD: $ADMIN_PASSWORD
    networks:
      - my_network
    depends_on:
      - database

  frontend:
    # Use prod or dev tags for production or development servers
    image: deevgeny/tool-point-frontend:dev
    networks:
      - my_network
      - web
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/backend/static/
      - media:/backend/media/
    restart: always
    depends_on:
      - backend

volumes:
  postgres_data:
  static:
  media:

networks:
  web:
    internal: false
  my_network:
    internal: true